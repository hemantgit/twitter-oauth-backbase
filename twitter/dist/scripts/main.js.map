{"version":3,"sources":[false,"false*","false**","webpack:///hsbc-widget-account-share/./scripts/main.js","false***","false****","false*****",null,"webpack:///hsbc-widget-account-share/./scripts/controllers.js","webpack:///hsbc-widget-account-share/./scripts/directive.js","webpack:///hsbc-widget-account-share/./scripts/models.js","webpack:///hsbc-widget-account-share/./scripts/filter.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_RESULT__","run","name","base","core","ui","deps","createModule","constant","controller","directive","service","filter","undefined","webpackPolyfill","deprecate","paths","children","MainCtrl","WidgetModel","lpWidget","lpCoreUtils","lpCoreError","$scope","$q","$http","me","model","b2gLocale","localeFormat","localStorage","getItem","myCountry","PROPERTIES","IS_ENABLED_FOR_HK","$inject","prototype","$onInit","listOfSoftwares","isPrimaryUser","selectedSoftware","selectedProviderName","ifUniqueRefRequired","isDataLoaded","accountDetailsExistingFeed","accountDetailsNewFeed","userSelectedAccountsArr","companyDetails","isBtnDisabled","uniqueRef","limit","isExistingUser","checkUserType","loadChooseProviderData","loadBankFeedData","checkTermsCondition","date","getCurrentDate","locale","localeTemp","split","toUpperCase","getUserType","then","response","data","primaryUser","getListOfProvider","res","forEach","softwareDetailsData","countries","indexOf","push","UniqueRefFormat","rule","realtime","getListOfAccounts","isSelected","companyList","accountListConnected","list","subAccounts","arrTier2","tier2","arrTier3","tier3","currency","balance","providersListTier3","providers","provider","providerID","accountType","accountInfo","type","accountName","nickname","accountNumber","number","tier","providersListTier2","providersList","accountListPending","companyName","company","associatedProviders","getTermsConditions","condition","ACCEPTED","tempExistingProviderList","existingProviderList","listT1","console","log","concat","listT2","listT3","swList","removeDuplicates","updateUniqueRef","format","uniqueRefPlaceHolder","chooseProviderContinue","providerName","ifoAuthRequired","newBankFeedFlow","saveSelectedAccounts","journey","arr","accountCurrency","storeData","postType","postData","description","accountListItem","objects","sendingCustomerDetails","success","status","bankFeedState","error","saveTnC","selectThisAccount","ifAnyAccountSelected","accounts","checkAll","$event","target","checked","loadMore","d","Date","printThis","section","mywindow","window","open","document","write","getElementById","innerHTML","print","close","resetAll","view","termsCondition","restrict","link","scope","elem","attrs","on","lpCoreBus","resolvePortalPlaceholders","getPreference","ACCOUNTING_SOFTWARE_LIST_URL","ACCOUNTS_LIST_URL","SAVE_NEW_FEED_URL","DELETE_EXISTING_FEED_URL","TERMS_AND_CONDITIONS_URL","SAVE_TERMS_AND_CONDITIONS_URL","USER_TYPE_URL","http","q","deferred","defer","get","result","resolve","promise","accountOverview","user","tnc","JSON","stringify","postUrl","postMethod","method","url","headers","Content-Type","prop","new_arr","lookup","i","providerListFilter","styles","str","join","replace","toLowerCase"],"mappings":";CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,EAAAG,QAAA,QAAAA,QAAA,QAAAA,QAAA,OACA,kBAAAC,gBAAAC,IACAD,QAAA,oBAAAJ,GACA,gBAAAC,SACAA,QAAA,6BAAAD,EAAAG,QAAA,QAAAA,QAAA,QAAAA,QAAA,OAEAJ,EAAA,6BAAAC,EAAAD,EAAA,KAAAA,EAAA,KAAAA,EAAA,KACCO,KAAA,SAAAC,EAAAC,EAAAC,GACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAX,OAGA,IAAAC,GAAAW,EAAAD,IACAX,WACAa,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAd,EAAAD,QAAAC,IAAAD,QAAAU,GAGAT,EAAAa,QAAA,EAGAb,EAAAD,QAvBA,GAAAY,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,IAGAR,EAAA,KDgBM,SAAST,EAAQD,QAASU,GAE/BT,EAAOD,QAAUU,EAAoB,IAKhC,SAAST,EAAQD,QAASU,GAE/B,GAAIS,IE/DL,SAAAlB,GAAA,YASAkB,GAAA,SAAAjB,QAAAF,QAAAC,GAkBA,QAAAmB,MAdAnB,EAAAoB,KAAA,2BAEA,IAAAC,GAAAZ,EAAA,GACAa,EAAAb,EAAA,GACAc,EAAAd,EAAA,GAEAe,GACAF,EAAAF,KACAG,EAAAH,KAUApB,GAAAD,QAAAsB,EAAAI,aAAAzB,EAAAoB,KAAAI,GACAE,SAAA,cAAA1B,EAAAoB,MACAO,WAAAlB,EAAA,IACAmB,UAAAnB,EAAA,IACAoB,QAAApB,EAAA,IACAqB,OAAArB,EAAA,IACAU,QACAL,KAAAf,QAAAU,EAAAV,QAAAC,KAAA+B,SAAAb,IAAAlB,EAAAD,QAAAmB,MFgE8BJ,KAAKf,QAASU,EAAoB,GAAGT,KAI7D,SAASA,EAAQD,SG1GvBC,EAAAD,QAAA,SAAAC,GAQA,MAPAA,GAAAgC,kBACAhC,EAAAiC,UAAA,aACAjC,EAAAkC,SAEAlC,EAAAmC,YACAnC,EAAAgC,gBAAA,GAEAhC,IHkHM,SAASA,EAAQD,SI1HvBC,EAAAD,QAAAM,GJgIM,SAASL,EAAQD,SKhIvBC,EAAAD,QAAAO,GLsIM,SAASN,EAAQD,SMtIvBC,EAAAD,QAAAQ,GN4IM,SAASP,EAAQD,QAASU,GO5IhC,GAAAS,EAIAA,GAAA,SAAAjB,QAAAF,SAEA,YAOA,SAAAqC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAxC,IACAwC,GAAAC,MAAAR,EACAO,EAAAE,UAAA1C,KAAA2C,aAAAC,aAAAC,QAAA,kBACAL,EAAAM,UAAAN,EAAAC,MAAAM,WAAAC,kBAAA,UP0IKhB,EAASiB,SAAW,cAAe,WAAY,cAAe,cAAe,SAAU,KAAM,SOxIlGjB,EAAAkB,UAAAC,QAAA,WACAnD,KAAAoD,mBACApD,KAAAqD,eAAA,EACArD,KAAAsD,iBAAA,GACAtD,KAAAuD,qBAAA,GACAvD,KAAAwD,qBAAA,EACAxD,KAAAyD,cAAA,EACAzD,KAAA0D,8BACA1D,KAAA2D,yBACA3D,KAAA4D,2BACA5D,KAAA6D,kBACA7D,KAAA8D,eAAA,EACA9D,KAAA+D,UAAA,GACA/D,KAAAgE,MAAA,EACAhE,KAAAiE,eAAA,GACAjE,KAAAkE,gBACAlE,KAAAmE,yBACAnE,KAAAoE,mBACApE,KAAAqE,sBACArE,KAAAsE,KAAAtE,KAAAuE,kBAIAvC,EAAAkB,UAAAP,aAAA,SAAA6B,GACA,GAAAC,GAAA,OAIA,OAHAD,KACAC,EAAAD,EAAAE,MAAA,YAAAF,EAAAE,MAAA,QAAAC,eAEAF,GAEAzC,EAAAkB,UAAAgB,cAAA,WACA,GAAA1B,GAAAxC,IACAA,MAAAyC,MAAAmC,cAAAC,KAAA,SAAAC,GACA,KAAAA,EAAAC,KAAAC,aAAA,KAAAF,EAAAC,KAAAC,cACAxC,EAAAa,eAAA,MAKArB,EAAAkB,UAAAiB,uBAAA,WACA,GAAA3B,GAAAxC,IACAwC,GAAAC,MAAAwC,oBAAAJ,KAAA,SAAAK,GACA,MAAAA,EACA1C,EAAAiB,cAAA,GAEAjB,EAAAiB,cAAA,EACAyB,EAAAC,QAAA,SAAAC,GACAA,EAAAC,UAAAC,QAAA9C,EAAAM,cAAA,GACAN,EAAAY,gBAAAmC,MACA/E,GAAA4E,EAAA5E,GACAQ,KAAAoE,EAAApE,KACAwE,gBAAA,MAAAJ,EAAAK,KAAAL,EAAAK,KAAA,GACAC,SAAAN,EAAAM,iBAOA1D,EAAAkB,UAAAkB,iBAAA,WACA,GAAA5B,GAAAxC,IACAwC,GAAAC,MAAAkD,oBAAAd,KAAA,SAAAK,GACA,SAAAA,EACA1C,EAAAiB,cAAA,MAEA,CACAjB,EAAAiB,gBAAA,EACAjB,EAAAyB,gBAAA,CACA,IAAA2B,IAAA,CACAV,GAAAC,QAAA,SAAAU,GACA,GAAAnC,MACAC,IAEA,KAAAkC,EAAAC,uBACAtD,EAAAyB,gBAAA,GAEA4B,EAAAC,qBAAAX,QAAA,SAAAY,GACA,OAAAA,EAAAC,aAAA,MAAAD,EAAAC,YAAA,CACA,GAAAC,KAEAF,GAAAC,YAAAb,QAAA,SAAAe,GACA,OAAAA,EAAAF,YAAA,CACA,GAAAG,KACAD,GAAAF,YAAAb,QAAA,SAAAiB,GACA,GAAAC,GAAA,MAAAD,EAAAE,QAAA,GAAAF,EAAAE,QAAAD,SACAE,IACA,OAAAH,EAAAI,WACAJ,EAAAI,UAAArB,QAAA,SAAAsB,GACAF,EAAAhB,KAAAkB,EAAAC,cAGAP,EAAAZ,MACAoB,YAAAP,EAAAQ,YAAAC,KACAC,YAAAV,EAAAQ,YAAAG,SACAC,cAAAZ,EAAAQ,YAAAK,OACAZ,WACAa,KAAA,QACAlB,YAAA,GACAS,SAAAF,EACAX,iBAIA,GAAAS,GAAA,MAAAH,EAAAI,QAAA,GAAAJ,EAAAI,QAAAD,SACAc,IACA,OAAAjB,EAAAM,WACAN,EAAAM,UAAArB,QAAA,SAAAsB,GACAU,EAAA5B,KAAAkB,EAAAC,cAGAT,EAAAV,MACAoB,YAAAT,EAAAU,YAAAC,KACAC,YAAAZ,EAAAU,YAAAG,SACAC,cAAAd,EAAAU,YAAAK,OACAZ,WACAa,KAAA,QACAlB,YAAAG,EACAM,SAAAU,EACAvB,iBAIA,GAAAwB,KACA,OAAArB,EAAAS,WACAT,EAAAS,UAAArB,QAAA,SAAAsB,GACAW,EAAA7B,KAAAkB,EAAAC,cAGAhD,EAAA6B,MACAoB,YAAAZ,EAAAa,YAAAC,KACAC,YAAAf,EAAAa,YAAAG,SACAC,cAAAjB,EAAAa,YAAAK,OACAZ,SAAAN,EAAAO,QAAAD,SACAa,KAAA,QACAlB,YAAAC,EACAQ,SAAAW,EACAxB,iBAGAC,EAAAwB,mBAAAlC,QAAA,SAAAY,GACA,OAAAA,EAAAC,aAAA,MAAAD,EAAAC,YAAA,CACA,GAAAC,KAEAF,GAAAC,YAAAb,QAAA,SAAAe,GACA,OAAAA,EAAAF,YAAA,CACA,GAAAG,KACAD,GAAAF,YAAAb,QAAA,SAAAiB,GACA,GAAAC,GAAA,MAAAD,EAAAE,QAAA,GAAAF,EAAAE,QAAAD,QACAF,GAAAZ,MACAoB,YAAAP,EAAAQ,YAAAC,KACAC,YAAAV,EAAAQ,YAAAG,SACAC,cAAAZ,EAAAQ,YAAAK,OACAZ,WACAa,KAAA,QACAlB,YAAA,GACAJ,iBAIA,GAAAS,GAAA,MAAAH,EAAAI,QAAA,GAAAJ,EAAAI,QAAAD,QACAJ,GAAAV,MACAoB,YAAAT,EAAAU,YAAAC,KACAC,YAAAZ,EAAAU,YAAAG,SACAC,cAAAd,EAAAU,YAAAK,OACAZ,WACAa,KAAA,QACAlB,YAAAG,EACAP,iBAKAjC,EAAA4B,MACAoB,YAAAZ,EAAAa,YAAAC,KACAC,YAAAf,EAAAa,YAAAG,SACAC,cAAAjB,EAAAa,YAAAK,OACAZ,SAAAN,EAAAO,QAAAD,SACAa,KAAA,QACAlB,YAAAC,EACAL,iBAGApD,EAAAqB,eAAA0B,MACA+B,YAAAzB,EAAA0B,QAAAvG,KACA8E,qBAAApC,EACA2D,mBAAA1D,EACAiC,iBAGApD,EAAAgF,0BAKAxF,EAAAkB,UAAAmB,oBAAA,WACA,GAAA7B,GAAAxC,IACAwC,GAAAC,MAAAgF,qBAAA5C,KAAA,SAAAC,GACAtC,EAAAkF,UAAA,KAAA5C,EAAAC,KAAA,GAAA4C,YAMA3F,EAAAkB,UAAAsE,oBAAA,WACA,GAAAhF,GAAAxC,KACA4H,IACApF,GAAAqF,wBACArF,EAAAqB,eAAAsB,QAAA,SAAAU,GACAA,EAAAC,qBAAAX,QAAA,SAAA2C,GACAC,QAAAC,IAAA,SAAAF,GACAF,IAAAK,OAAAH,EAAArB,UACA,IAAAqB,EAAA9B,aAAA,MAAA8B,EAAA9B,aACA8B,EAAA9B,YAAAb,QAAA,SAAA+C,GACAN,IAAAK,OAAAC,EAAAzB,UACA,IAAAyB,EAAAlC,aAAA,MAAAkC,EAAAlC,aACAkC,EAAAlC,YAAAb,QAAA,SAAAgD,GACAP,IAAAK,OAAAE,EAAA1B,kBAOAmB,EAAAzC,QAAA,SAAAY,GACAvD,EAAAY,gBAAA+B,QAAA,SAAAiD,GACArC,GAAAqC,EAAA5H,IACAgC,EAAAqF,qBAAAtC,MACA/E,GAAA4H,EAAA5H,GACAQ,KAAAoH,EAAApH,WAKAwB,EAAAqF,qBAAArF,EAAAC,MAAA4F,iBAAA7F,EAAAqF,qBAAA,OAIA7F,EAAAkB,UAAAoF,gBAAA,SAAAC,GACA,GAAA/F,GAAAxC,IACA,KAAAuI,GACA/F,EAAAgG,qBAAAD,EACA/F,EAAAgB,qBAAA,GAEAhB,EAAAgB,qBAAA,GAIAxB,EAAAkB,UAAAuF,uBAAA,WACA,GAAAjG,GAAAxC,IACAwC,GAAAY,gBAAA+B,QAAA,SAAAuD,GACAA,EAAAlI,IAAAgC,EAAAc,mBACAd,EAAAmG,gBAAA,GAAAD,EAAAhD,YAGAlD,EAAAmG,kBACAnG,EAAAoG,gBAAA,kBAEApG,EAAAkG,gBAGA1G,EAAAkB,UAAAwF,aAAA,WACA,GAAAlG,GAAAxC,IACAwC,GAAAY,gBAAA+B,QAAA,SAAAuD,GACAA,EAAAlI,IAAAgC,EAAAc,mBACAd,EAAAe,qBAAAmF,EAAA1H,SAKAgB,EAAAkB,UAAA2F,qBAAA,SAAAC,GACA,GACAC,GADAvG,EAAAxC,IAEAwC,GAAAqB,eAAAsB,QAAA,SAAAU,GAEAkD,EADA,YAAAD,EACAjD,EAAAC,qBAEAD,EAAAwB,mBAEA0B,EAAA5D,QAAA,SAAA2C,GACAA,EAAAlC,YACApD,EAAAoB,wBAAA2B,MACAyB,cAAAc,EAAAd,cACAL,YAAAmB,EAAAnB,YACAG,YAAAgB,EAAAhB,YACAkC,gBAAAlB,EAAAzB,SACAlF,GAAA,aAGA,IAAA2G,EAAA9B,aAAA,MAAA8B,EAAA9B,aACA8B,EAAA9B,YAAAb,QAAA,SAAA+C,GACAA,EAAAtC,aACApD,EAAAoB,wBAAA2B,MACAyB,cAAAkB,EAAAlB,cACAL,YAAAuB,EAAAvB,YACAG,YAAAoB,EAAApB,YACAkC,gBAAAd,EAAA7B,SACAlF,GAAA,aAGA,IAAA+G,EAAAlC,aAAA,MAAAkC,EAAAlC,aACAkC,EAAAlC,YAAAb,QAAA,SAAAgD,GACA3F,EAAAoB,wBAAA2B,MACAyB,cAAAmB,EAAAnB,cACAL,YAAAwB,EAAAxB,YACAG,YAAAqB,EAAArB,YACAkC,gBAAAb,EAAA9B,SACAlF,GAAA,uBAYAa,EAAAkB,UAAA+F,UAAA,SAAAC,GACA,GAAA1G,GAAAxC,KACAmJ,GAEAC,YAAA,GACArE,QAEAvC,GAAAoB,wBAAAuB,QAAA,SAAAkE,GACA,GAAAC,KACAA,GAAAvF,UAAAvB,EAAAuB,UACAuF,EAAAtC,cAAAqC,EAAArC,cACAsC,EAAA3C,YAAA0C,EAAA1C,YACA2C,EAAAxC,YAAAuC,EAAAvC,YACAwC,EAAAN,gBAAAK,EAAAL,gBACAM,EAAA9C,YAAAE,WAAAlE,EAAAc,mBACA6F,EAAApE,KAAAQ,KAAA+D,KAEA9G,EAAAC,MAAA8G,uBAAAJ,EAAAD,GACAM,QAAA,SAAAzE,EAAA0E,GACA1B,QAAAC,IAAA,UAAAjD,GACAvC,EAAAkH,cAAAR,EAAA,aAEAS,MAAA,SAAA5E,GACAgD,QAAAC,IAAA,QAAAjD,GACAvC,EAAAkH,cAAAR,EAAA,WAEA1G,EAAAC,MAAAmH,UACAJ,QAAA,SAAAzE,EAAA0E,MAEAE,MAAA,SAAA5E,OAMA/C,EAAAkB,UAAA2G,kBAAA,SAAAf,GACA,GACAC,GACAe,EAFAtH,EAAAxC,IAGAwC,GAAAqB,eAAAsB,QAAA,SAAAU,GAEAkD,EADA,YAAAD,EACAjD,EAAAC,qBAEAD,EAAAwB,mBAEA0B,EAAA5D,QAAA,SAAA4E,GACAA,EAAAnE,aACAkE,GAAA,OAIAA,EACAtH,EAAAsB,eAAA,EAEAtB,EAAAsB,eAAA,GAGA9B,EAAAkB,UAAA8G,SAAA,SAAAC,EAAAnB,GACA,GACAC,GADAvG,EAAAxC,IAGA+I,GADA,YAAAD,EACAtG,EAAAkB,2BAEAlB,EAAAmB,sBAEAnB,EAAAqB,eAAAsB,QAAA,SAAAU,GAEAkD,EADA,YAAAD,EACAjD,EAAAC,qBAEAD,EAAAwB,mBAGA4C,EAAAC,OAAAC,QACA3H,EAAAqB,eAAAsB,QAAA,SAAAU,GACAkD,EAAA5D,QAAA,SAAA2C,GACAA,EAAAlC,YAAA,EACA,IAAAkC,EAAA9B,aAAA,MAAA8B,EAAA9B,aACA8B,EAAA9B,YAAAb,QAAA,SAAA+C,GACAA,EAAAtC,YAAA,EACA,IAAAsC,EAAAlC,aAAA,MAAAkC,EAAAlC,aACAkC,EAAAlC,YAAAb,QAAA,SAAAgD,GACAA,EAAAvC,YAAA,MAKApD,EAAAsB,eAAA,MAMAiF,EAAA5D,QAAA,SAAA2C,GACAA,EAAAlC,YAAA,EACA,IAAAkC,EAAA9B,aAAA,MAAA8B,EAAA9B,aACA8B,EAAA9B,YAAAb,QAAA,SAAA+C,GACAA,EAAAtC,YAAA,EACA,IAAAsC,EAAAlC,aAAA,MAAAkC,EAAAlC,aACAkC,EAAAlC,YAAAb,QAAA,SAAAgD,GACAA,EAAAvC,YAAA,MAKApD,EAAAsB,eAAA,OAMA9B,EAAAkB,UAAAkH,SAAA,WACA,GAAA5H,GAAAxC,IACAwC,GAAAwB,OAAA,GAEAhC,EAAAkB,UAAAqB,eAAA,WACA,GAAA8F,GAAA,GAAAC,KACA,OAAAD,IAEArI,EAAAkB,UAAAqH,UAAA,SAAAC,GACA,GAAAC,GAAAC,OAAAC,KAAA,kCACAF,GAAAG,SAAAC,MAAAD,SAAAE,eAAAN,GAAAO,WACAN,EAAAG,SAAAC,MAAA,kBACAJ,EAAAG,SAAAI,QACAP,EAAAQ,SAKAjJ,EAAAkB,UAAAgI,SAAA,SAAAhC,GACA,GAAA1G,GAAAxC,IACAwC,GAAAoB,2BACApB,EAAAsB,eAAA,EACAtB,EAAAuB,UAAA,GACAvB,EAAAgB,qBAAA,EACAhB,EAAAmB,sBAAAwB,QAAA,SAAAY,GACAA,EAAAH,YAAA,IAEApD,EAAAkB,2BAAAyB,QAAA,SAAAY,GACAA,EAAAH,YAAA,IAEApD,EAAAc,iBAAA,GACAd,EAAA2I,KAAA,eAMAxL,QAAAqC,YACAtB,KAAAf,QAAAU,EAAAV,QAAAC,KAAA+B,SAAAb,IAAAlB,EAAAD,QAAAmB,KPkJM,SAASlB,EAAQD,QAASU,GQvnBhC,GAAAS,KAAA,SAAAjB,QAAAF,SACA,YAEAA,SAAAyL,eAAA,WACA,OACAC,SAAA,KACAC,KAAA,SAAAC,EAAAC,EAAAC,GACAD,EAAAE,GAAA,0BACAhB,OAAAC,KACA,iHACA,mEAMAjK,KAAAf,QAAAU,EAAAV,QAAAC,KAAA+B,SAAAb,IAAAlB,EAAAD,QAAAmB,KR6nBM,SAASlB,EAAQD,QAASU,GS7oBhC,GAAAS,EAIAA,GAAA,SAAAjB,QAAAF,SACA,YAKA,SAAAsC,GAAAC,EAAAyJ,EAAAxJ,EAAAI,EAAAD,GACA,GAAAS,IACAC,kBAAAb,EAAAyJ,0BAAA1J,EAAA2J,cAAA,iBACAC,6BAAA3J,EAAAyJ,0BAAA1J,EAAA2J,cAAA,6BACAE,kBAAA5J,EAAAyJ,0BAAA1J,EAAA2J,cAAA,6BACAG,kBAAA7J,EAAAyJ,0BAAA1J,EAAA2J,cAAA,2BACAI,yBAAA9J,EAAAyJ,0BAAA1J,EAAA2J,cAAA,oBACAK,yBAAA/J,EAAAyJ,0BAAA1J,EAAA2J,cAAA,0BACAM,8BAAAhK,EAAAyJ,0BAAA1J,EAAA2J,cAAA,8BACAO,cAAAjK,EAAAyJ,0BAAA1J,EAAA2J,cAAA,qBAEA7L,MAAAqM,KAAA9J,EACAvC,KAAAsM,EAAAhK,EACAtC,KAAA+C,aTmoBKd,EAAYgB,SAAW,WAAY,YAAa,cAAe,QAAS,MS/nB7EhB,EAAAiB,UAAA+B,kBAAA,WACA,GAAAsH,GAAAvM,KAAAsM,EAAAE,OAOA,OANAxM,MAAAqM,KAAAI,IAAAzM,KAAA+C,WAAA+I,8BACAjH,KAAA,SAAA6H,GACAH,EAAAI,QAAAD,EAAA3H,OACA,SAAA4E,GACA4C,EAAAI,QAAAhD,EAAAF,UAEA8C,EAAAK,SAmBA3K,EAAAiB,UAAAyC,kBAAA,WACA,GAAA4G,GAAAvM,KAAAsM,EAAAE,OAOA,OANAxM,MAAAqM,KAAAI,IAAAzM,KAAA+C,WAAAgJ,mBACAlH,KAAA,SAAA6H,GACAH,EAAAI,QAAAD,EAAA3H,KAAA8H,kBACA,SAAAlD,GACA4C,EAAAI,QAAAhD,EAAAF,UAEA8C,EAAAK,SAIA3K,EAAAiB,UAAA0B,YAAA,WACA,GAAA2H,GAAAvM,KAAAsM,EAAAE,OAIA,OAHAxM,MAAAqM,KAAAI,IAAAzM,KAAA+C,WAAAqJ,eAAAvH,KAAA,SAAAiI,GACAP,EAAAI,QAAAG,KAEAP,EAAAK,SAIA3K,EAAAiB,UAAAuE,mBAAA,WACA,GAAA8E,GAAAvM,KAAAsM,EAAAE,OAIA,OAHAxM,MAAAqM,KAAAI,IAAAzM,KAAA+C,WAAAmJ,0BAAArH,KAAA,SAAAkI,GACAR,EAAAI,QAAAI,KAEAR,EAAAK,SAIA3K,EAAAiB,UAAAqG,uBAAA,SAAAJ,EAAAD,GACAnB,QAAAC,IAAA,QAAAgF,KAAAC,UAAA9D,GACA,IAAA+D,GAAAC,CASA,OARA,WAAAjE,GACAnB,QAAAC,IAAA,UACAkF,EAAAlN,KAAA+C,WAAAkJ,yBACAkB,EAAA,SAEAD,EAAAlN,KAAA+C,WAAAiJ,kBACAmB,EAAA,OAEAnN,KAAAqM,MACAe,OAAAD,EACAE,IAAAH,EACAnI,KAAAoE,EACAmE,SACAC,eAAA,uBAMAtL,EAAAiB,UAAA0G,QAAA,SAAAT,EAAAD,GACA,MAAAlJ,MAAAqM,MACAe,OAAA,MACAC,IAAArN,KAAA+C,WAAAoJ,8BACApH,KAAA,GACAuI,SACAC,eAAA,uBAMAtL,EAAAiB,UAAAmF,iBAAA,SAAAU,EAAAyE,GACA,GAAAC,MACAC,IAEA,QAAAC,KAAA5E,GACA2E,EAAA3E,EAAA4E,GAAAH,IAAAzE,EAAA4E,EAGA,KAAAA,IAAAD,GACAD,EAAAlI,KAAAmI,EAAAC,GAGA,OAAAF,IAEA9N,QAAAsC,eAEAvB,KAAAf,QAAAU,EAAAV,QAAAC,KAAA+B,SAAAb,IAAAlB,EAAAD,QAAAmB,KTmpBM,SAASlB,EAAQD,QAASU,GUzxBhC,GAAAS,EAIAA,GAAA,SAAAjB,QAAAF,SACA,YAIAA,SAAAiO,mBAAA,WACA,gBAAAC,GACAA,KAAA,EACA,IAAAC,GAAA,gBAAAD,OAAAE,KAAA,IAOA,OAJAD,KAAAE,QAAA,WAGAF,IAAAG,iBAIAvN,KAAAf,QAAAU,EAAAV,QAAAC,KAAA+B,SAAAb,IAAAlB,EAAAD,QAAAmB","file":"scripts\\main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"base\"), require(\"core\"), require(\"ui\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"base\", \"core\", \"ui\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hsbc-widget-account-share\"] = factory(require(\"base\"), require(\"core\"), require(\"ui\"));\n\telse\n\t\troot[\"hsbc-widget-account-share\"] = factory(root[\"base\"], root[\"core\"], root[\"ui\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"base\"), require(\"core\"), require(\"ui\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"base\", \"core\", \"ui\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hsbc-widget-account-share\"] = factory(require(\"base\"), require(\"core\"), require(\"ui\"));\n\telse\n\t\troot[\"hsbc-widget-account-share\"] = factory(root[\"base\"], root[\"core\"], root[\"ui\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module) {'use strict'; /**\r\n\t               *  ----------------------------------------------------------------\r\n\t               *  Copyright © Backbase B.V.\r\n\t               *  ----------------------------------------------------------------\r\n\t               *  Filename : main.js\r\n\t               *  Description: bankAccount\r\n\t               *  ----------------------------------------------------------------\r\n\t               */\n\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t    'use strict';\n\n\t    module.name = 'hsbc-widget-account-share';\n\n\t    var base = __webpack_require__(3);\n\t    var core = __webpack_require__(4);\n\t    var ui = __webpack_require__(5);\n\n\t    var deps = [\n\t    core.name,\n\t    ui.name];\n\n\n\t    /**\r\n\t               * @ngInject\r\n\t               */\n\t    function run() {\n\t        //Module is Bootstrapped\n\t    }\n\n\t    module.exports = base.createModule(module.name, deps).\n\t    constant('WIDGET_NAME', module.name).\n\t    controller(__webpack_require__(6)).\n\t    directive(__webpack_require__(7)).\n\t    service(__webpack_require__(8)).\n\t    filter(__webpack_require__(9)).\n\t    run(run);\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict'; /**\r\n\t               * Controllers\r\n\t               * @module controllers\r\n\t               */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports) {\n\n\t    'use strict';\n\n\t    /**\r\n\t                   * Main controller\r\n\t                   * @ngInject\r\n\t                   * @constructor\r\n\t                   */\n\t    function MainCtrl(WidgetModel, lpWidget, lpCoreUtils, lpCoreError, $scope, $q, $http) {\n\t        var me = this;\n\t        me.model = WidgetModel;\n\t        me.b2gLocale = this.localeFormat(localStorage.getItem('currentLocale'));\n\t        me.myCountry = me.model.PROPERTIES.IS_ENABLED_FOR_HK ? 'HK' : 'UK';\n\t    };\n\t    MainCtrl.prototype.$onInit = function () {\n\t        this.listOfSoftwares = [];\n\t        this.isPrimaryUser = true;\n\t        this.selectedSoftware = '';\n\t        this.selectedProviderName = '';\n\t        this.ifUniqueRefRequired = false;\n\t        this.isDataLoaded = false;\n\t        this.accountDetailsExistingFeed = [];\n\t        this.accountDetailsNewFeed = [];\n\t        this.userSelectedAccountsArr = []; // List of accounts selected by users to be shared.\n\t        this.companyDetails = [];\n\t        this.isBtnDisabled = true;\n\t        this.uniqueRef = '';\n\t        this.limit = 5;\n\t        this.isExistingUser = '';\n\t        this.checkUserType();\n\t        this.loadChooseProviderData();\n\t        this.loadBankFeedData();\n\t        this.checkTermsCondition();\n\t        this.date = this.getCurrentDate();\n\t    };\n\n\t    // Based on HK WS1 code. used for language change.\n\t    MainCtrl.prototype.localeFormat = function (locale) {\n\t        var localeTemp = 'en_US';\n\t        if (locale) {\n\t            localeTemp = locale.split('-')[0] + '_' + locale.split('-')[1].toUpperCase();\n\t        }\n\t        return localeTemp;\n\t    };\n\t    MainCtrl.prototype.checkUserType = function () {\n\t        var me = this;\n\t        this.model.getUserType().then(function (response) {\n\t            if (response.data.primaryUser != 'Y' && response.data.primaryUser != 'y') {\n\t                me.isPrimaryUser = false;\n\t            }\n\t        });\n\n\t    };\n\t    MainCtrl.prototype.loadChooseProviderData = function () {\n\t        var me = this;\n\t        me.model.getListOfProvider().then(function (res) {\n\t            if (res === 404) {\n\t                me.isDataLoaded = false;\n\t            } else {\n\t                me.isDataLoaded = true;\n\t                res.forEach(function (softwareDetailsData) {\n\t                    if (softwareDetailsData.countries.indexOf(me.myCountry) !== -1) {\n\t                        me.listOfSoftwares.push({\n\t                            id: softwareDetailsData.id,\n\t                            name: softwareDetailsData.name,\n\t                            UniqueRefFormat: softwareDetailsData.rule != null ? softwareDetailsData.rule : '',\n\t                            realtime: softwareDetailsData.realtime });\n\n\t                    }\n\t                });\n\t            }\n\t        });\n\t    };\n\t    MainCtrl.prototype.loadBankFeedData = function () {\n\t        var me = this;\n\t        me.model.getListOfAccounts().then(function (res) {\n\t            if (res === 404) {\n\t                me.isDataLoaded = false;\n\t            } else\n\t            {\n\t                me.isDataLoaded === false ? false : true; // False even if account list loaded but not providerList\n\t                me.isExistingUser = false;\n\t                var isSelected = false;\n\t                res.forEach(function (companyList) {\n\t                    var accountDetailsExistingFeed = [];\n\t                    var accountDetailsNewFeed = [];\n\n\t                    if (companyList.accountListConnected != '') {\n\t                        me.isExistingUser = true;\n\t                    }\n\t                    companyList.accountListConnected.forEach(function (list) {\n\t                        if (list.subAccounts != '' && list.subAccounts != null) {\n\t                            var arrTier2 = [];\n\t                            var isTier2Selected = false;\n\t                            list.subAccounts.forEach(function (tier2) {\n\t                                if (tier2.subAccounts != '') {\n\t                                    var arrTier3 = [];\n\t                                    tier2.subAccounts.forEach(function (tier3) {\n\t                                        var currency = tier3.balance == null ? '' : tier3.balance.currency;\n\t                                        var providersListTier3 = [];\n\t                                        if (!(tier3.providers == null)) {\n\t                                            tier3.providers.forEach(function (provider) {\n\t                                                providersListTier3.push(provider.providerID);\n\t                                            });\n\t                                        }\n\t                                        arrTier3.push({\n\t                                            accountType: tier3.accountInfo.type,\n\t                                            accountName: tier3.accountInfo.nickname,\n\t                                            accountNumber: tier3.accountInfo.number,\n\t                                            currency: currency,\n\t                                            tier: 'teir3',\n\t                                            subAccounts: '',\n\t                                            provider: providersListTier3,\n\t                                            isSelected: isSelected });\n\n\t                                    });\n\t                                }\n\t                                var currency = tier2.balance == null ? '' : tier2.balance.currency;\n\t                                var providersListTier2 = [];\n\t                                if (!(tier2.providers == null)) {\n\t                                    tier2.providers.forEach(function (provider) {\n\t                                        providersListTier2.push(provider.providerID);\n\t                                    });\n\t                                }\n\t                                arrTier2.push({\n\t                                    accountType: tier2.accountInfo.type,\n\t                                    accountName: tier2.accountInfo.nickname,\n\t                                    accountNumber: tier2.accountInfo.number,\n\t                                    currency: currency,\n\t                                    tier: 'teir2',\n\t                                    subAccounts: arrTier3,\n\t                                    provider: providersListTier2,\n\t                                    isSelected: isSelected });\n\n\t                            });\n\t                        }\n\t                        var providersList = [];\n\t                        if (!(list.providers == null)) {\n\t                            list.providers.forEach(function (provider) {\n\t                                providersList.push(provider.providerID);\n\t                            });\n\t                        }\n\t                        accountDetailsExistingFeed.push({\n\t                            accountType: list.accountInfo.type,\n\t                            accountName: list.accountInfo.nickname,\n\t                            accountNumber: list.accountInfo.number,\n\t                            currency: list.balance.currency,\n\t                            tier: 'teir1',\n\t                            subAccounts: arrTier2,\n\t                            provider: providersList,\n\t                            isSelected: isSelected });\n\n\t                    });\n\t                    companyList.accountListPending.forEach(function (list) {\n\t                        if (list.subAccounts != '' && list.subAccounts != null) {\n\t                            var arrTier2 = [];\n\t                            var isTier2Selected = false;\n\t                            list.subAccounts.forEach(function (tier2) {\n\t                                if (tier2.subAccounts != '') {\n\t                                    var arrTier3 = [];\n\t                                    tier2.subAccounts.forEach(function (tier3) {\n\t                                        var currency = tier3.balance == null ? '' : tier3.balance.currency;\n\t                                        arrTier3.push({\n\t                                            accountType: tier3.accountInfo.type,\n\t                                            accountName: tier3.accountInfo.nickname,\n\t                                            accountNumber: tier3.accountInfo.number,\n\t                                            currency: currency,\n\t                                            tier: 'teir3',\n\t                                            subAccounts: '',\n\t                                            isSelected: isSelected });\n\n\t                                    });\n\t                                }\n\t                                var currency = tier2.balance == null ? '' : tier2.balance.currency;\n\t                                arrTier2.push({\n\t                                    accountType: tier2.accountInfo.type,\n\t                                    accountName: tier2.accountInfo.nickname,\n\t                                    accountNumber: tier2.accountInfo.number,\n\t                                    currency: currency,\n\t                                    tier: 'teir2',\n\t                                    subAccounts: arrTier3,\n\t                                    isSelected: isSelected });\n\n\t                            });\n\t                        }\n\n\t                        accountDetailsNewFeed.push({\n\t                            accountType: list.accountInfo.type,\n\t                            accountName: list.accountInfo.nickname,\n\t                            accountNumber: list.accountInfo.number,\n\t                            currency: list.balance.currency,\n\t                            tier: 'teir1',\n\t                            subAccounts: arrTier2,\n\t                            isSelected: isSelected });\n\n\t                    });\n\t                    me.companyDetails.push({\n\t                        companyName: companyList.company.name,\n\t                        accountListConnected: accountDetailsExistingFeed,\n\t                        accountListPending: accountDetailsNewFeed,\n\t                        isSelected: isSelected });\n\n\t                });\n\t                me.associatedProviders();\n\t            }\n\t        });\n\n\t    };\n\t    MainCtrl.prototype.checkTermsCondition = function () {\n\t        var me = this;\n\t        me.model.getTermsConditions().then(function (response) {\n\t            me.condition = response.data[0].ACCEPTED == '1' ? true : false;\n\t        });\n\n\t    };\n\n\t    //Create list of providers in Use\n\t    MainCtrl.prototype.associatedProviders = function () {\n\t        var me = this;\n\t        var tempExistingProviderList = [];\n\t        me.existingProviderList = [];\n\t        me.companyDetails.forEach(function (companyList) {\n\t            companyList.accountListConnected.forEach(function (listT1) {\n\t                console.log('listT1' + listT1);\n\t                tempExistingProviderList = tempExistingProviderList.concat(listT1.provider);\n\t                if (listT1.subAccounts != '' && listT1.subAccounts != null) {\n\t                    listT1.subAccounts.forEach(function (listT2) {\n\t                        tempExistingProviderList = tempExistingProviderList.concat(listT2.provider);\n\t                        if (listT2.subAccounts != '' && listT2.subAccounts != null) {\n\t                            listT2.subAccounts.forEach(function (listT3) {\n\t                                tempExistingProviderList = tempExistingProviderList.concat(listT3.provider);\n\t                            });\n\t                        }\n\t                    });\n\t                }\n\t            });\n\t        });\n\t        tempExistingProviderList.forEach(function (list) {\n\t            me.listOfSoftwares.forEach(function (swList) {\n\t                if (list == swList.id) {\n\t                    me.existingProviderList.push({\n\t                        id: swList.id,\n\t                        name: swList.name });\n\n\t                }\n\t            });\n\t        });\n\t        me.existingProviderList = me.model.removeDuplicates(me.existingProviderList, \"id\");\n\t    };\n\n\t    // Unique ref and validation\n\t    MainCtrl.prototype.updateUniqueRef = function (format) {\n\t        var me = this;\n\t        if (format != '') {\n\t            me.uniqueRefPlaceHolder = format;\n\t            me.ifUniqueRefRequired = true;\n\t        } else {\n\t            me.ifUniqueRefRequired = false;\n\t        }\n\t    };\n\n\t    MainCtrl.prototype.chooseProviderContinue = function () {\n\t        var me = this;\n\t        me.listOfSoftwares.forEach(function (providerName) {\n\t            if (providerName.id == me.selectedSoftware) {\n\t                me.ifoAuthRequired = providerName.realtime == 1 ? true : false;\n\t            }\n\t        });\n\t        if (!me.ifoAuthRequired) {\n\t            me.newBankFeedFlow = 'selectAccounts';\n\t        }\n\t        me.providerName();\n\t    };\n\t    //  Name of selected provider\n\t    MainCtrl.prototype.providerName = function () {\n\t        var me = this;\n\t        me.listOfSoftwares.forEach(function (providerName) {\n\t            if (providerName.id == me.selectedSoftware) {\n\t                me.selectedProviderName = providerName.name;\n\t            }\n\t        });\n\t    };\n\t    // List of selected accounts\n\t    MainCtrl.prototype.saveSelectedAccounts = function (journey) {\n\t        var me = this;\n\t        var arr;\n\t        me.companyDetails.forEach(function (companyList) {\n\t            if (journey == 'existing') {\n\t                arr = companyList.accountListConnected;\n\t            } else {\n\t                arr = companyList.accountListPending;\n\t            }\n\t            arr.forEach(function (listT1) {\n\t                if (listT1.isSelected) {\n\t                    me.userSelectedAccountsArr.push({\n\t                        accountNumber: listT1.accountNumber,\n\t                        accountType: listT1.accountType,\n\t                        accountName: listT1.accountName,\n\t                        accountCurrency: listT1.currency,\n\t                        ui: 'ui-tier1' });\n\n\t                }\n\t                if (listT1.subAccounts != '' && listT1.subAccounts != null) {\n\t                    listT1.subAccounts.forEach(function (listT2) {\n\t                        if (listT2.isSelected) {\n\t                            me.userSelectedAccountsArr.push({\n\t                                accountNumber: listT2.accountNumber,\n\t                                accountType: listT2.accountType,\n\t                                accountName: listT2.accountName,\n\t                                accountCurrency: listT2.currency,\n\t                                ui: 'ui-tier2' });\n\n\t                            // Select all T3 accounts if T2 is selected\n\t                            if (listT2.subAccounts != '' && listT2.subAccounts != null) {\n\t                                listT2.subAccounts.forEach(function (listT3) {\n\t                                    me.userSelectedAccountsArr.push({\n\t                                        accountNumber: listT3.accountNumber,\n\t                                        accountType: listT3.accountType,\n\t                                        accountName: listT3.accountName,\n\t                                        accountCurrency: listT3.currency,\n\t                                        ui: 'ui-tier3' });\n\n\t                                });\n\t                            }\n\t                        }\n\t                    });\n\t                }\n\n\t            });\n\t        });\n\t    };\n\n\t    MainCtrl.prototype.storeData = function (postType) {\n\t        var me = this;\n\t        var postData =\n\t        {\n\t            'description': '',\n\t            'data': [] };\n\n\t        me.userSelectedAccountsArr.forEach(function (accountListItem) {\n\t            var objects = {};\n\t            objects.uniqueRef = me.uniqueRef;\n\t            objects.accountNumber = accountListItem.accountNumber;\n\t            objects.accountType = accountListItem.accountType;\n\t            objects.accountName = accountListItem.accountName;\n\t            objects.accountCurrency = accountListItem.accountCurrency;\n\t            objects.providers = [{ 'providerID': me.selectedSoftware }];\n\t            postData.data.push(objects);\n\t        });\n\t        me.model.sendingCustomerDetails(postData, postType).\n\t        success(function (data, status) {\n\t            console.log('success' + data);\n\t            me.bankFeedState = postType + '-success';\n\t        }).\n\t        error(function (data) {\n\t            console.log('Error' + data);\n\t            me.bankFeedState = postType + '-error';\n\t        });\n\t        me.model.saveTnC().\n\t        success(function (data, status) {\n\t        }).\n\t        error(function (data) {\n\t        });\n\t        ;\n\n\t    };\n\n\t    MainCtrl.prototype.selectThisAccount = function (journey) {\n\t        var me = this;\n\t        var arr;\n\t        var ifAnyAccountSelected;\n\t        me.companyDetails.forEach(function (companyList) {\n\t            if (journey == 'existing') {\n\t                arr = companyList.accountListConnected;\n\t            } else {\n\t                arr = companyList.accountListPending;\n\t            }\n\t            arr.forEach(function (accounts) {\n\t                if (accounts.isSelected) {\n\t                    ifAnyAccountSelected = true;\n\t                }\n\t            });\n\t        });\n\t        if (ifAnyAccountSelected) {\n\t            me.isBtnDisabled = false;\n\t        } else {\n\t            me.isBtnDisabled = true;\n\t        }\n\t    };\n\t    MainCtrl.prototype.checkAll = function ($event, journey) {\n\t        var me = this;\n\t        var arr;\n\t        if (journey == 'existing') {\n\t            arr = me.accountDetailsExistingFeed;\n\t        } else {\n\t            arr = me.accountDetailsNewFeed;\n\t        }\n\t        me.companyDetails.forEach(function (companyList) {\n\t            if (journey == 'existing') {\n\t                arr = companyList.accountListConnected;\n\t            } else {\n\t                arr = companyList.accountListPending;\n\t            }\n\n\t            if ($event.target.checked) {\n\t                me.companyDetails.forEach(function (companyList) {\n\t                    arr.forEach(function (listT1) {\n\t                        listT1.isSelected = true;\n\t                        if (listT1.subAccounts != '' && listT1.subAccounts != null) {\n\t                            listT1.subAccounts.forEach(function (listT2) {\n\t                                listT2.isSelected = true;\n\t                                if (listT2.subAccounts != '' && listT2.subAccounts != null) {\n\t                                    listT2.subAccounts.forEach(function (listT3) {\n\t                                        listT3.isSelected = true;\n\t                                    });\n\t                                }\n\t                            });\n\t                        }\n\t                        me.isBtnDisabled = false;\n\t                    });\n\t                });\n\n\t            } else\n\t            {// if unchecked\n\t                arr.forEach(function (listT1) {\n\t                    listT1.isSelected = false;\n\t                    if (listT1.subAccounts != '' && listT1.subAccounts != null) {\n\t                        listT1.subAccounts.forEach(function (listT2) {\n\t                            listT2.isSelected = false;\n\t                            if (listT2.subAccounts != '' && listT2.subAccounts != null) {\n\t                                listT2.subAccounts.forEach(function (listT3) {\n\t                                    listT3.isSelected = false;\n\t                                });\n\t                            }\n\t                        });\n\t                    }\n\t                    me.isBtnDisabled = true;\n\t                });\n\t            }\n\t        });\n\n\t    };\n\t    MainCtrl.prototype.loadMore = function () {\n\t        var me = this;\n\t        me.limit += 5;\n\t    };\n\t    MainCtrl.prototype.getCurrentDate = function () {\n\t        var d = new Date();\n\t        return d;\n\t    };\n\t    MainCtrl.prototype.printThis = function (section) {\n\t        var mywindow = window.open('', 'PRINT', 'height=900,width=900');\n\t        mywindow.document.write(document.getElementById(section).innerHTML);\n\t        mywindow.document.write('</body></html>');\n\t        mywindow.document.print();\n\t        mywindow.close();\n\n\n\t        //window.print();\n\t    };\n\t    MainCtrl.prototype.resetAll = function (postType) {\n\t        var me = this;\n\t        me.userSelectedAccountsArr = [];\n\t        me.isBtnDisabled = true;\n\t        me.uniqueRef = '';\n\t        me.ifUniqueRefRequired = false;\n\t        me.accountDetailsNewFeed.forEach(function (list) {\n\t            list.isSelected = false;\n\t        });\n\t        me.accountDetailsExistingFeed.forEach(function (list) {\n\t            list.isSelected = false;\n\t        });\n\t        me.selectedSoftware = '';\n\t        me.view = 'landingPage'; // move to landing page.\n\t    };\n\n\t    /**\r\n\t        * Export Controllers\r\n\t        */\n\t    exports.MainCtrl = MainCtrl;\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports) {\n\t    'use strict';\n\t    // @ngInject\n\t    exports.termsCondition = function () {\n\t        return {\n\t            restrict: 'AE',\n\t            link: function link(scope, elem, attrs) {\n\t                elem.on('click', '.tnc', function () {\n\t                    window.open(\n\t                    '/portalserver/static/widgets/[BBHOST]/hsbc-widget-account-share/dist/media/business_banking_tandcs.pdf', 'mywin',\n\t                    'left=30,top=30,width=900,height=600,toolbar=1,resizable=0');\n\n\t                });\n\t            } };\n\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict'; /**\r\n\t               * Models\r\n\t               * @module models\r\n\t               */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports) {\n\t    'use strict';\n\t    /**\r\n\t                   * @constructor\r\n\t                   * @ngInject\r\n\t                   */\n\t    function WidgetModel(lpWidget, lpCoreBus, lpCoreUtils, $http, $q) {\n\t        var PROPERTIES = {\n\t            IS_ENABLED_FOR_HK: lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('enabledForHK')),\n\t            ACCOUNTING_SOFTWARE_LIST_URL: lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('getAccountingSoftwareUrl')),\n\t            ACCOUNTS_LIST_URL: lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('getAccountInformationUrl')),\n\t            SAVE_NEW_FEED_URL: lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('saveCustomerDetailsUrl')),\n\t            DELETE_EXISTING_FEED_URL: lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('RevokeAccessUrl')),\n\t            TERMS_AND_CONDITIONS_URL: lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('termsAndConditionsUrl')),\n\t            SAVE_TERMS_AND_CONDITIONS_URL: lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('termsAndConditionsSaveUrl')),\n\t            USER_TYPE_URL: lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('userIndicatorUrl')) };\n\n\t        this.http = $http;\n\t        this.q = $q;\n\t        this.PROPERTIES = PROPERTIES;\n\t    }\n\n\t    //Get Provider List and Details\n\t    WidgetModel.prototype.getListOfProvider = function () {\n\t        var deferred = this.q.defer();\n\t        this.http.get(this.PROPERTIES.ACCOUNTING_SOFTWARE_LIST_URL).\n\t        then(function (result) {\n\t            deferred.resolve(result.data);\n\t        }, function (error) {\n\t            deferred.resolve(error.status);\n\t        });\n\t        return deferred.promise;\n\t    };\n\n\t    //Get List of Accounts\n\t    /* WidgetModel.prototype.getListOfAccounts = function () {\r\n\t     var posts;\r\n\t     var deferred = this.q.defer();\r\n\t     this.http.get(this.PROPERTIES.ACCOUNTS_LIST_URL)\r\n\t     .then(function (result) {\r\n\t     posts = result.data.accountOverview;\r\n\t     deferred.resolve(posts);\r\n\t     }, function (error) {\r\n\t     posts = error.status;\r\n\t     deferred.resolve(error.status);\r\n\t     });\r\n\t     posts = deferred.promise;\r\n\t     return this.q.when(posts);\r\n\t     };*/\n\n\t    WidgetModel.prototype.getListOfAccounts = function () {\n\t        var deferred = this.q.defer();\n\t        this.http.get(this.PROPERTIES.ACCOUNTS_LIST_URL).\n\t        then(function (result) {\n\t            deferred.resolve(result.data.accountOverview);\n\t        }, function (error) {\n\t            deferred.resolve(error.status);\n\t        });\n\t        return deferred.promise;\n\t    };\n\n\t    //Get Provider List and Details\n\t    WidgetModel.prototype.getUserType = function () {\n\t        var deferred = this.q.defer();\n\t        this.http.get(this.PROPERTIES.USER_TYPE_URL).then(function (user) {\n\t            deferred.resolve(user);\n\t        });\n\t        return deferred.promise;\n\t    };\n\n\t    //Get if User is primary user\n\t    WidgetModel.prototype.getTermsConditions = function () {\n\t        var deferred = this.q.defer();\n\t        this.http.get(this.PROPERTIES.TERMS_AND_CONDITIONS_URL).then(function (tnc) {\n\t            deferred.resolve(tnc);\n\t        });\n\t        return deferred.promise;\n\t    };\n\n\t    // Posting data for revoke and create bBnkfeed\n\t    WidgetModel.prototype.sendingCustomerDetails = function (postData, postType) {\n\t        console.log('modal' + JSON.stringify(postData));\n\t        var postUrl, postMethod;\n\t        if (postType === 'revoke') {\n\t            console.log('revoke');\n\t            postUrl = this.PROPERTIES.DELETE_EXISTING_FEED_URL;\n\t            postMethod = 'POST';\n\t        } else {\n\t            postUrl = this.PROPERTIES.SAVE_NEW_FEED_URL;\n\t            postMethod = 'put';\n\t        }\n\t        return this.http({\n\t            method: postMethod,\n\t            url: postUrl,\n\t            data: postData,\n\t            headers: {\n\t                'Content-Type': 'application/json' } });\n\n\n\t    };\n\n\t    // Save Terms and conditions check flag\n\t    WidgetModel.prototype.saveTnC = function (postData, postType) {\n\t        return this.http({\n\t            method: 'put',\n\t            url: this.PROPERTIES.SAVE_TERMS_AND_CONDITIONS_URL,\n\t            data: '',\n\t            headers: {\n\t                'Content-Type': 'application/json' } });\n\n\n\t    };\n\n\t    // Remove duplicate from Array\n\t    WidgetModel.prototype.removeDuplicates = function (arr, prop) {\n\t        var new_arr = [];\n\t        var lookup = {};\n\n\t        for (var i in arr) {\n\t            lookup[arr[i][prop]] = arr[i];\n\t        }\n\n\t        for (i in lookup) {\n\t            new_arr.push(lookup[i]);\n\t        }\n\n\t        return new_arr;\n\t    };\n\t    exports.WidgetModel = WidgetModel;\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict'; /**\r\n\t               * filter\r\n\t               * @module filter\r\n\t               */\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports) {\n\t    'use strict';\n\t    /**\r\n\t                   * Export filter\r\n\t                   */\n\t    exports.providerListFilter = function () {\n\t        return function (styles) {\n\t            styles = styles || '';\n\t            var str = typeof styles === 'string' ? styles : styles.join(',');\n\n\t            // revert ' ' to '-';\n\t            str = str.replace(/ /gi, '-');\n\n\t            // to lower case\n\t            str = str.toLowerCase();\n\t            return str;\n\t        };\n\t    };\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// scripts/main.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 59a202775796e75c131a","/**\r\n *  ----------------------------------------------------------------\r\n *  Copyright © Backbase B.V.\r\n *  ----------------------------------------------------------------\r\n *  Filename : main.js\r\n *  Description: bankAccount\r\n *  ----------------------------------------------------------------\r\n */\r\n\r\ndefine(function (require, exports, module) {\r\n\r\n    'use strict';\r\n\r\n    module.name = 'hsbc-widget-account-share';\r\n\r\n    var base = require('base');\r\n    var core = require('core');\r\n    var ui = require('ui');\r\n\r\n    var deps = [\r\n        core.name,\r\n        ui.name,\r\n    ];\r\n\r\n    /**\r\n     * @ngInject\r\n     */\r\n    function run() {\r\n        //Module is Bootstrapped\r\n    }\r\n\r\n    module.exports = base.createModule(module.name, deps)\r\n        .constant('WIDGET_NAME', module.name)\r\n        .controller(require('./controllers'))\r\n        .directive(require('./directive'))\r\n        .service(require('./models'))\r\n        .filter(require('./filter'))\r\n        .run(run);\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/main.js\n// module id = 1\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"base\"\n// module id = 3\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"core\"\n// module id = 4\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ui\"\n// module id = 5\n// module chunks = 0","/**\r\n * Controllers\r\n * @module controllers\r\n */\r\ndefine(function (require, exports) {\r\n\r\n        'use strict';\r\n\r\n        /**\r\n         * Main controller\r\n         * @ngInject\r\n         * @constructor\r\n         */\r\n        function MainCtrl(WidgetModel, lpWidget, lpCoreUtils, lpCoreError, $scope, $q, $http) {\r\n            var me = this;\r\n            me.model = WidgetModel;\r\n            me.b2gLocale = this.localeFormat(localStorage.getItem('currentLocale'));\r\n            me.myCountry = me.model.PROPERTIES.IS_ENABLED_FOR_HK ? 'HK' : 'UK';\r\n        };\r\n        MainCtrl.prototype.$onInit = function () {\r\n            this.listOfSoftwares = [];\r\n            this.isPrimaryUser = true;\r\n            this.selectedSoftware = '';\r\n            this.selectedProviderName = '';\r\n            this.ifUniqueRefRequired = false;\r\n            this.isDataLoaded = false;\r\n            this.accountDetailsExistingFeed = [];\r\n            this.accountDetailsNewFeed = [];\r\n            this.userSelectedAccountsArr = []; // List of accounts selected by users to be shared.\r\n            this.companyDetails = [];\r\n            this.isBtnDisabled = true;\r\n            this.uniqueRef = '';\r\n            this.limit = 5;\r\n            this.isExistingUser = '';\r\n            this.checkUserType();\r\n            this.loadChooseProviderData();\r\n            this.loadBankFeedData();\r\n            this.checkTermsCondition();\r\n            this.date = this.getCurrentDate();\r\n        };\r\n\r\n        // Based on HK WS1 code. used for language change.\r\n        MainCtrl.prototype.localeFormat = function (locale) {\r\n            var localeTemp = 'en_US';\r\n            if (locale) {\r\n                localeTemp = locale.split('-')[0] + '_' + locale.split('-')[1].toUpperCase();\r\n            }\r\n            return localeTemp;\r\n        };\r\n        MainCtrl.prototype.checkUserType = function () {\r\n            var me = this;\r\n            this.model.getUserType().then(function (response) {\r\n                    if (response.data.primaryUser != 'Y' && response.data.primaryUser != 'y') {\r\n                        me.isPrimaryUser = false;\r\n                    }\r\n                }\r\n            );\r\n        };\r\n        MainCtrl.prototype.loadChooseProviderData = function () {\r\n            var me = this;\r\n            me.model.getListOfProvider().then(function (res) {\r\n                if (res === 404) {\r\n                    me.isDataLoaded = false;\r\n                } else {\r\n                    me.isDataLoaded = true;\r\n                    res.forEach(function (softwareDetailsData) {\r\n                        if (softwareDetailsData.countries.indexOf(me.myCountry) !== -1) {\r\n                            me.listOfSoftwares.push({\r\n                                id: softwareDetailsData.id,\r\n                                name: softwareDetailsData.name,\r\n                                UniqueRefFormat: (softwareDetailsData.rule) != null ? softwareDetailsData.rule : '',\r\n                                realtime: softwareDetailsData.realtime\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        };\r\n        MainCtrl.prototype.loadBankFeedData = function () {\r\n            var me = this;\r\n            me.model.getListOfAccounts().then(function (res) {\r\n                if (res === 404) {\r\n                    me.isDataLoaded = false;\r\n                }\r\n                else {\r\n                    me.isDataLoaded === false ? false : true; // False even if account list loaded but not providerList\r\n                    me.isExistingUser = false;\r\n                    var isSelected = false;\r\n                    res.forEach(function (companyList) {\r\n                        var accountDetailsExistingFeed = [];\r\n                        var accountDetailsNewFeed = [];\r\n\r\n                        if (companyList.accountListConnected != '') {\r\n                            me.isExistingUser = true\r\n                        }\r\n                        companyList.accountListConnected.forEach(function (list) {\r\n                            if (list.subAccounts != '' && list.subAccounts != null) {\r\n                                var arrTier2 = [];\r\n                                var isTier2Selected = false;\r\n                                list.subAccounts.forEach(function (tier2) {\r\n                                    if (tier2.subAccounts != '') {\r\n                                        var arrTier3 = [];\r\n                                        tier2.subAccounts.forEach(function (tier3) {\r\n                                            var currency = (tier3.balance == null) ? '' : tier3.balance.currency;\r\n                                            var providersListTier3 = [];\r\n                                            if (!(tier3.providers == null)) {\r\n                                                tier3.providers.forEach(function (provider) {\r\n                                                    providersListTier3.push(provider.providerID);\r\n                                                });\r\n                                            }\r\n                                            arrTier3.push({\r\n                                                accountType: tier3.accountInfo.type,\r\n                                                accountName: tier3.accountInfo.nickname,\r\n                                                accountNumber: tier3.accountInfo.number,\r\n                                                currency: currency,\r\n                                                tier: 'teir3',\r\n                                                subAccounts: '',\r\n                                                provider: providersListTier3,\r\n                                                isSelected: isSelected\r\n                                            });\r\n                                        });\r\n                                    }\r\n                                    var currency = (tier2.balance == null) ? '' : tier2.balance.currency;\r\n                                    var providersListTier2 = [];\r\n                                    if (!(tier2.providers == null)) {\r\n                                        tier2.providers.forEach(function (provider) {\r\n                                            providersListTier2.push(provider.providerID);\r\n                                        });\r\n                                    }\r\n                                    arrTier2.push({\r\n                                        accountType: tier2.accountInfo.type,\r\n                                        accountName: tier2.accountInfo.nickname,\r\n                                        accountNumber: tier2.accountInfo.number,\r\n                                        currency: currency,\r\n                                        tier: 'teir2',\r\n                                        subAccounts: arrTier3,\r\n                                        provider: providersListTier2,\r\n                                        isSelected: isSelected\r\n                                    });\r\n                                });\r\n                            }\r\n                            var providersList = [];\r\n                            if (!(list.providers == null)) {\r\n                                list.providers.forEach(function (provider) {\r\n                                    providersList.push(provider.providerID);\r\n                                });\r\n                            }\r\n                            accountDetailsExistingFeed.push({\r\n                                accountType: list.accountInfo.type,\r\n                                accountName: list.accountInfo.nickname,\r\n                                accountNumber: list.accountInfo.number,\r\n                                currency: list.balance.currency,\r\n                                tier: 'teir1',\r\n                                subAccounts: arrTier2,\r\n                                provider: providersList,\r\n                                isSelected: isSelected\r\n                            });\r\n                        });\r\n                        companyList.accountListPending.forEach(function (list) {\r\n                            if (list.subAccounts != '' && list.subAccounts != null) {\r\n                                var arrTier2 = [];\r\n                                var isTier2Selected = false;\r\n                                list.subAccounts.forEach(function (tier2) {\r\n                                    if (tier2.subAccounts != '') {\r\n                                        var arrTier3 = [];\r\n                                        tier2.subAccounts.forEach(function (tier3) {\r\n                                            var currency = (tier3.balance == null) ? '' : tier3.balance.currency;\r\n                                            arrTier3.push({\r\n                                                accountType: tier3.accountInfo.type,\r\n                                                accountName: tier3.accountInfo.nickname,\r\n                                                accountNumber: tier3.accountInfo.number,\r\n                                                currency: currency,\r\n                                                tier: 'teir3',\r\n                                                subAccounts: '',\r\n                                                isSelected: isSelected\r\n                                            });\r\n                                        });\r\n                                    }\r\n                                    var currency = (tier2.balance == null) ? '' : tier2.balance.currency;\r\n                                    arrTier2.push({\r\n                                        accountType: tier2.accountInfo.type,\r\n                                        accountName: tier2.accountInfo.nickname,\r\n                                        accountNumber: tier2.accountInfo.number,\r\n                                        currency: currency,\r\n                                        tier: 'teir2',\r\n                                        subAccounts: arrTier3,\r\n                                        isSelected: isSelected\r\n                                    });\r\n                                });\r\n                            }\r\n\r\n                            accountDetailsNewFeed.push({\r\n                                accountType: list.accountInfo.type,\r\n                                accountName: list.accountInfo.nickname,\r\n                                accountNumber: list.accountInfo.number,\r\n                                currency: list.balance.currency,\r\n                                tier: 'teir1',\r\n                                subAccounts: arrTier2,\r\n                                isSelected: isSelected\r\n                            });\r\n                        });\r\n                        me.companyDetails.push({\r\n                            companyName: companyList.company.name,\r\n                            accountListConnected: accountDetailsExistingFeed,\r\n                            accountListPending: accountDetailsNewFeed,\r\n                            isSelected: isSelected\r\n                        });\r\n                    });\r\n                    me.associatedProviders();\r\n                }\r\n            });\r\n\r\n        };\r\n        MainCtrl.prototype.checkTermsCondition = function () {\r\n            var me = this;\r\n            me.model.getTermsConditions().then(function (response) {\r\n                me.condition = response.data[0].ACCEPTED == '1' ? true : false;\r\n            });\r\n\r\n        };\r\n\r\n        //Create list of providers in Use\r\n        MainCtrl.prototype.associatedProviders = function () {\r\n            var me = this;\r\n            var tempExistingProviderList = [];\r\n            me.existingProviderList = [];\r\n            me.companyDetails.forEach(function (companyList) {\r\n                companyList.accountListConnected.forEach(function (listT1) {\r\n                    console.log('listT1' + listT1);\r\n                    tempExistingProviderList = tempExistingProviderList.concat(listT1.provider);\r\n                    if (listT1.subAccounts != '' && listT1.subAccounts != null) {\r\n                        listT1.subAccounts.forEach(function (listT2) {\r\n                            tempExistingProviderList = tempExistingProviderList.concat(listT2.provider);\r\n                            if (listT2.subAccounts != '' && listT2.subAccounts != null) {\r\n                                listT2.subAccounts.forEach(function (listT3) {\r\n                                    tempExistingProviderList = tempExistingProviderList.concat(listT3.provider);\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n            tempExistingProviderList.forEach(function (list) {\r\n                me.listOfSoftwares.forEach(function (swList) {\r\n                    if (list == swList.id) {\r\n                        me.existingProviderList.push({\r\n                            id: swList.id,\r\n                            name: swList.name\r\n                        })\r\n                    }\r\n                });\r\n            });\r\n            me.existingProviderList = me.model.removeDuplicates(me.existingProviderList, \"id\");\r\n        };\r\n\r\n        // Unique ref and validation\r\n        MainCtrl.prototype.updateUniqueRef = function (format) {\r\n            var me = this;\r\n            if (format != '') {\r\n                me.uniqueRefPlaceHolder = format;\r\n                me.ifUniqueRefRequired = true;\r\n            } else {\r\n                me.ifUniqueRefRequired = false;\r\n            }\r\n        };\r\n\r\n        MainCtrl.prototype.chooseProviderContinue = function () {\r\n            var me = this;\r\n            me.listOfSoftwares.forEach(function (providerName) {\r\n                if (providerName.id == me.selectedSoftware) {\r\n                    me.ifoAuthRequired = providerName.realtime == 1 ? true : false;\r\n                }\r\n            });\r\n            if (!me.ifoAuthRequired) {\r\n                me.newBankFeedFlow = 'selectAccounts';\r\n            }\r\n            me.providerName();\r\n        };\r\n        //  Name of selected provider\r\n        MainCtrl.prototype.providerName = function () {\r\n            var me = this;\r\n            me.listOfSoftwares.forEach(function (providerName) {\r\n                if (providerName.id == me.selectedSoftware) {\r\n                    me.selectedProviderName = providerName.name;\r\n                }\r\n            });\r\n        };\r\n// List of selected accounts\r\n        MainCtrl.prototype.saveSelectedAccounts = function (journey) {\r\n            var me = this;\r\n            var arr;\r\n            me.companyDetails.forEach(function (companyList) {\r\n                if (journey == 'existing') {\r\n                    arr = companyList.accountListConnected;\r\n                } else {\r\n                    arr = companyList.accountListPending;\r\n                }\r\n                arr.forEach(function (listT1) {\r\n                    if (listT1.isSelected) {\r\n                        me.userSelectedAccountsArr.push({\r\n                            accountNumber: listT1.accountNumber,\r\n                            accountType: listT1.accountType,\r\n                            accountName: listT1.accountName,\r\n                            accountCurrency: listT1.currency,\r\n                            ui: 'ui-tier1'\r\n                        });\r\n                    }\r\n                    if (listT1.subAccounts != '' && listT1.subAccounts != null) {\r\n                        listT1.subAccounts.forEach(function (listT2) {\r\n                            if (listT2.isSelected) {\r\n                                me.userSelectedAccountsArr.push({\r\n                                    accountNumber: listT2.accountNumber,\r\n                                    accountType: listT2.accountType,\r\n                                    accountName: listT2.accountName,\r\n                                    accountCurrency: listT2.currency,\r\n                                    ui: 'ui-tier2'\r\n                                });\r\n                                // Select all T3 accounts if T2 is selected\r\n                                if (listT2.subAccounts != '' && listT2.subAccounts != null) {\r\n                                    listT2.subAccounts.forEach(function (listT3) {\r\n                                        me.userSelectedAccountsArr.push({\r\n                                            accountNumber: listT3.accountNumber,\r\n                                            accountType: listT3.accountType,\r\n                                            accountName: listT3.accountName,\r\n                                            accountCurrency: listT3.currency,\r\n                                            ui: 'ui-tier3'\r\n                                        });\r\n                                    });\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                });\r\n            });\r\n        };\r\n\r\n        MainCtrl.prototype.storeData = function (postType) {\r\n            var me = this;\r\n            var postData =\r\n            {\r\n                'description': '',\r\n                'data': []\r\n            }\r\n            me.userSelectedAccountsArr.forEach(function (accountListItem) {\r\n                var objects = {};\r\n                objects.uniqueRef = me.uniqueRef;\r\n                objects.accountNumber = accountListItem.accountNumber;\r\n                objects.accountType = accountListItem.accountType;\r\n                objects.accountName = accountListItem.accountName;\r\n                objects.accountCurrency = accountListItem.accountCurrency;\r\n                objects.providers = [{'providerID': me.selectedSoftware}];\r\n                postData.data.push(objects);\r\n            });\r\n            me.model.sendingCustomerDetails(postData, postType)\r\n                .success(function (data, status) {\r\n                    console.log('success' + data);\r\n                    me.bankFeedState = postType + '-success';\r\n                })\r\n                .error(function (data) {\r\n                    console.log('Error' + data);\r\n                    me.bankFeedState = postType + '-error';\r\n                });\r\n            me.model.saveTnC()\r\n                .success(function (data, status) {\r\n                })\r\n                .error(function (data) {\r\n                });\r\n            ;\r\n\r\n        };\r\n\r\n        MainCtrl.prototype.selectThisAccount = function (journey) {\r\n            var me = this;\r\n            var arr;\r\n            var ifAnyAccountSelected;\r\n            me.companyDetails.forEach(function (companyList) {\r\n                if (journey == 'existing') {\r\n                    arr = companyList.accountListConnected;\r\n                } else {\r\n                    arr = companyList.accountListPending;\r\n                }\r\n                arr.forEach(function (accounts) {\r\n                    if (accounts.isSelected) {\r\n                        ifAnyAccountSelected = true;\r\n                    }\r\n                });\r\n            });\r\n            if (ifAnyAccountSelected) {\r\n                me.isBtnDisabled = false;\r\n            } else {\r\n                me.isBtnDisabled = true;\r\n            }\r\n        };\r\n        MainCtrl.prototype.checkAll = function ($event, journey) {\r\n            var me = this;\r\n            var arr;\r\n            if (journey == 'existing') {\r\n                arr = me.accountDetailsExistingFeed;\r\n            } else {\r\n                arr = me.accountDetailsNewFeed;\r\n            }\r\n            me.companyDetails.forEach(function (companyList) {\r\n                if (journey == 'existing') {\r\n                    arr = companyList.accountListConnected;\r\n                } else {\r\n                    arr = companyList.accountListPending;\r\n                }\r\n\r\n                if ($event.target.checked) {\r\n                    me.companyDetails.forEach(function (companyList) {\r\n                        arr.forEach(function (listT1) {\r\n                            listT1.isSelected = true;\r\n                            if (listT1.subAccounts != '' && listT1.subAccounts != null) {\r\n                                listT1.subAccounts.forEach(function (listT2) {\r\n                                    listT2.isSelected = true;\r\n                                    if (listT2.subAccounts != '' && listT2.subAccounts != null) {\r\n                                        listT2.subAccounts.forEach(function (listT3) {\r\n                                            listT3.isSelected = true;\r\n                                        });\r\n                                    }\r\n                                });\r\n                            }\r\n                            me.isBtnDisabled = false;\r\n                        });\r\n                    });\r\n\r\n                }\r\n                else { // if unchecked\r\n                    arr.forEach(function (listT1) {\r\n                        listT1.isSelected = false;\r\n                        if (listT1.subAccounts != '' && listT1.subAccounts != null) {\r\n                            listT1.subAccounts.forEach(function (listT2) {\r\n                                listT2.isSelected = false;\r\n                                if (listT2.subAccounts != '' && listT2.subAccounts != null) {\r\n                                    listT2.subAccounts.forEach(function (listT3) {\r\n                                        listT3.isSelected = false;\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                        me.isBtnDisabled = true;\r\n                    });\r\n                }\r\n            });\r\n\r\n        };\r\n        MainCtrl.prototype.loadMore = function () {\r\n            var me = this;\r\n            me.limit += 5;\r\n        };\r\n        MainCtrl.prototype.getCurrentDate = function () {\r\n            var d = new Date();\r\n            return d;\r\n        };\r\n        MainCtrl.prototype.printThis = function (section) {\r\n            var mywindow = window.open('', 'PRINT', 'height=900,width=900');\r\n            mywindow.document.write(document.getElementById(section).innerHTML);\r\n            mywindow.document.write('</body></html>');\r\n            mywindow.document.print();\r\n            mywindow.close();\r\n\r\n\r\n            //window.print();\r\n        };\r\n        MainCtrl.prototype.resetAll = function (postType) {\r\n            var me = this;\r\n            me.userSelectedAccountsArr = [];\r\n            me.isBtnDisabled = true;\r\n            me.uniqueRef = '';\r\n            me.ifUniqueRefRequired = false;\r\n            me.accountDetailsNewFeed.forEach(function (list) {\r\n                list.isSelected = false;\r\n            });\r\n            me.accountDetailsExistingFeed.forEach(function (list) {\r\n                list.isSelected = false;\r\n            });\r\n            me.selectedSoftware = '';\r\n            me.view = 'landingPage'; // move to landing page.\r\n        };\r\n\r\n        /**\r\n         * Export Controllers\r\n         */\r\n        exports.MainCtrl = MainCtrl;\r\n    }\r\n)\r\n;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/controllers.js\n// module id = 6\n// module chunks = 0","define(function (require, exports) {\r\n    'use strict';\r\n    // @ngInject\r\n    exports.termsCondition = function () {\r\n        return {\r\n            restrict: 'AE',\r\n            link: function (scope, elem, attrs) {\r\n                elem.on('click', '.tnc', function () {\r\n                    window.open(\r\n                        '/portalserver/static/widgets/[BBHOST]/hsbc-widget-account-share/dist/media/business_banking_tandcs.pdf', 'mywin',\r\n                        'left=30,top=30,width=900,height=600,toolbar=1,resizable=0'\r\n                    );\r\n                });\r\n            }\r\n        };\r\n    };\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/directive.js\n// module id = 7\n// module chunks = 0","/**\r\n * Models\r\n * @module models\r\n */\r\ndefine(function (require, exports) {\r\n    'use strict';\r\n    /**\r\n     * @constructor\r\n     * @ngInject\r\n     */\r\n    function WidgetModel(lpWidget, lpCoreBus, lpCoreUtils, $http, $q) {\r\n        var PROPERTIES = {\r\n            IS_ENABLED_FOR_HK:lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('enabledForHK')),\r\n            ACCOUNTING_SOFTWARE_LIST_URL: lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('getAccountingSoftwareUrl')),\r\n            ACCOUNTS_LIST_URL: lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('getAccountInformationUrl')),\r\n            SAVE_NEW_FEED_URL: lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('saveCustomerDetailsUrl')),\r\n            DELETE_EXISTING_FEED_URL: lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('RevokeAccessUrl')),\r\n            TERMS_AND_CONDITIONS_URL: lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('termsAndConditionsUrl')),\r\n            SAVE_TERMS_AND_CONDITIONS_URL: lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('termsAndConditionsSaveUrl')),\r\n            USER_TYPE_URL: lpCoreUtils.resolvePortalPlaceholders(lpWidget.getPreference('userIndicatorUrl'))\r\n        };\r\n        this.http = $http;\r\n        this.q = $q;\r\n        this.PROPERTIES = PROPERTIES;\r\n    }\r\n\r\n    //Get Provider List and Details\r\n    WidgetModel.prototype.getListOfProvider = function () {\r\n        var deferred = this.q.defer();\r\n        this.http.get(this.PROPERTIES.ACCOUNTING_SOFTWARE_LIST_URL)\r\n            .then(function (result) {\r\n                deferred.resolve(result.data);\r\n            }, function (error) {\r\n                deferred.resolve(error.status);\r\n            });\r\n        return deferred.promise;\r\n    };\r\n\r\n    //Get List of Accounts\r\n    /* WidgetModel.prototype.getListOfAccounts = function () {\r\n     var posts;\r\n     var deferred = this.q.defer();\r\n     this.http.get(this.PROPERTIES.ACCOUNTS_LIST_URL)\r\n     .then(function (result) {\r\n     posts = result.data.accountOverview;\r\n     deferred.resolve(posts);\r\n     }, function (error) {\r\n     posts = error.status;\r\n     deferred.resolve(error.status);\r\n     });\r\n     posts = deferred.promise;\r\n     return this.q.when(posts);\r\n     };*/\r\n\r\n    WidgetModel.prototype.getListOfAccounts = function () {\r\n        var deferred = this.q.defer();\r\n        this.http.get(this.PROPERTIES.ACCOUNTS_LIST_URL)\r\n            .then(function (result) {\r\n                deferred.resolve(result.data.accountOverview);\r\n            }, function (error) {\r\n                deferred.resolve(error.status);\r\n            });\r\n        return deferred.promise;\r\n    };\r\n\r\n    //Get Provider List and Details\r\n    WidgetModel.prototype.getUserType = function () {\r\n        var deferred = this.q.defer();\r\n        this.http.get(this.PROPERTIES.USER_TYPE_URL).then(function (user) {\r\n            deferred.resolve(user);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n\r\n    //Get if User is primary user\r\n    WidgetModel.prototype.getTermsConditions = function () {\r\n        var deferred = this.q.defer();\r\n        this.http.get(this.PROPERTIES.TERMS_AND_CONDITIONS_URL).then(function (tnc) {\r\n            deferred.resolve(tnc);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n\r\n    // Posting data for revoke and create bBnkfeed\r\n    WidgetModel.prototype.sendingCustomerDetails = function (postData, postType) {\r\n        console.log('modal' + JSON.stringify(postData));\r\n        var postUrl, postMethod;\r\n        if (postType === 'revoke') {\r\n            console.log('revoke');\r\n            postUrl = this.PROPERTIES.DELETE_EXISTING_FEED_URL;\r\n            postMethod = 'POST';\r\n        } else {\r\n            postUrl = this.PROPERTIES.SAVE_NEW_FEED_URL;\r\n            postMethod = 'put';\r\n        }\r\n        return this.http({\r\n            method: postMethod,\r\n            url: postUrl,\r\n            data: postData,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n    }\r\n\r\n    // Save Terms and conditions check flag\r\n    WidgetModel.prototype.saveTnC = function (postData, postType) {\r\n        return this.http({\r\n            method: 'put',\r\n            url: this.PROPERTIES.SAVE_TERMS_AND_CONDITIONS_URL,\r\n            data: '',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n    }\r\n\r\n    // Remove duplicate from Array\r\n    WidgetModel.prototype.removeDuplicates = function (arr, prop) {\r\n        var new_arr = [];\r\n        var lookup = {};\r\n\r\n        for (var i in arr) {\r\n            lookup[arr[i][prop]] = arr[i];\r\n        }\r\n\r\n        for (i in lookup) {\r\n            new_arr.push(lookup[i]);\r\n        }\r\n\r\n        return new_arr;\r\n    }\r\n    exports.WidgetModel = WidgetModel;\r\n\r\n});\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/models.js\n// module id = 8\n// module chunks = 0","/**\r\n * filter\r\n * @module filter\r\n */\r\ndefine(function (require, exports) {\r\n    'use strict';\r\n    /**\r\n     * Export filter\r\n     */\r\n    exports.providerListFilter=  function() {\r\n        return function (styles) {\r\n            styles = styles || '';\r\n            var str = (typeof styles === 'string') ? styles : styles.join(',');\r\n\r\n            // revert ' ' to '-';\r\n            str = str.replace(/ /gi, '-');\r\n\r\n            // to lower case\r\n            str = str.toLowerCase();\r\n            return str;\r\n        };\r\n    }\r\n});\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/filter.js\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}